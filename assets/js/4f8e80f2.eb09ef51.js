"use strict";(self.webpackChunkpredictive_maintenance_docs=self.webpackChunkpredictive_maintenance_docs||[]).push([[946],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>u});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var m=n.createContext({}),d=function(e){var t=n.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},s=function(e){var t=d(e.components);return n.createElement(m.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,o=e.originalType,m=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=d(a),u=i,h=c["".concat(m,".").concat(u)]||c[u]||p[u]||o;return a?n.createElement(h,r(r({ref:t},s),{},{components:a})):n.createElement(h,r({ref:t},s))}));function u(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=a.length,r=new Array(o);r[0]=c;var l={};for(var m in t)hasOwnProperty.call(t,m)&&(l[m]=t[m]);l.originalType=e,l.mdxType="string"==typeof e?e:i,r[1]=l;for(var d=2;d<o;d++)r[d]=a[d];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},837:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var n=a(7462),i=(a(7294),a(3905));const o={},r="Multivariate anomaly detection",l={unversionedId:"detection-anomalies.md/multivariate",id:"detection-anomalies.md/multivariate",title:"Multivariate anomaly detection",description:"Multivariate anomaly takes a holistic approach to anomaly detection. It uses all the variables in the training dataset to train the model. This is different from univariate anomaly detection, which uses only one variable and doesn't require a pre-trained model.",source:"@site/docs/50-detection-anomalies.md/30-multivariate.md",sourceDirName:"50-detection-anomalies.md",slug:"/detection-anomalies.md/multivariate",permalink:"/AiPoweredPredictiveMaintenanceDocs/detection-anomalies.md/multivariate",draft:!1,editUrl:"https://github.com/gloveboxes/AiPoweredPredictiveMaintenanceDocs/blob/main/docs/50-detection-anomalies.md/30-multivariate.md",tags:[],version:"current",sidebarPosition:30,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Univariate anomaly detection",permalink:"/AiPoweredPredictiveMaintenanceDocs/detection-anomalies.md/univariate"},next:{title:"Tips and Tricks",permalink:"/AiPoweredPredictiveMaintenanceDocs/tips-and-tricks"}},m={},d=[{value:"Create training dataset",id:"create-training-dataset",level:2},{value:"Generate the training dataset",id:"generate-the-training-dataset",level:2},{value:"Train an Anomaly Detection multivariate model",id:"train-an-anomaly-detection-multivariate-model",level:2},{value:"Detect anomalies using the multivariate model",id:"detect-anomalies-using-the-multivariate-model",level:2}],s={toc:d};function p(e){let{components:t,...o}=e;return(0,i.kt)("wrapper",(0,n.Z)({},s,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"multivariate-anomaly-detection"},"Multivariate anomaly detection"),(0,i.kt)("p",null,"Multivariate anomaly takes a holistic approach to anomaly detection. It uses all the variables in the training dataset to train the model. This is different from univariate anomaly detection, which uses only one variable and doesn't require a pre-trained model."),(0,i.kt)("p",null,"To use multivariate anomaly detection, you must training a model using multivariate data. You can use the data generator to generate multivariate data or you can also use your own data."),(0,i.kt)("p",null,"Multivariate anomaly detection inference is similar to univariate anomaly detection inference. You can use the anomaly detection API to detect anomalies in your data. Data can be sent to the anomaly detection API in one of two ways:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Batch inference - You can send a batch of data to the anomaly detection API and it will return the predicted anomalies for the data."),(0,i.kt)("li",{parentName:"ol"},"Streaming inference - You can send data to the anomaly detection API one data point at a time. The anomaly detection API will return the predicted anomaly for the data point.")),(0,i.kt)("p",null,"You can find out more Azure Anomaly Detection from the ",(0,i.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/azure/cognitive-services/anomaly-detector/"},"Azure Anomaly Detector")," documentation."),(0,i.kt)("h2",{id:"create-training-dataset"},"Create training dataset"),(0,i.kt)("p",null,"You need to create a training dataset that contains the multivariate data that you want to use to train the model. The training dataset consists of the following columns:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"timestamp")," - The timestamp of the data point."),(0,i.kt)("li",{parentName:"ul"},"temperature - The temperature of the data point."),(0,i.kt)("li",{parentName:"ul"},"humidity - The humidity of the data point."),(0,i.kt)("li",{parentName:"ul"},"predicted - The predicted anomaly of the data point.")),(0,i.kt)("p",null,"You need around 15000 data points to train the model. Given it's unlikely that you have that much data in your database, you can use a data generator to synthetically generate the data."),(0,i.kt)("h2",{id:"generate-the-training-dataset"},"Generate the training dataset"),(0,i.kt)("p",null,"In the ",(0,i.kt)("strong",{parentName:"p"},"Notebooks/DemoMultivariateTraining")," folder there is a Python generator that you can use to generate the training data. The generator will generate a CSV file that you can use to train the model. To run the generator, follow these steps:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"From a command line, navigate to the ",(0,i.kt)("strong",{parentName:"p"},"Notebooks/DemoMultivariateTraining")," folder.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Run the following command."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"python3 generator.py\n")))),(0,i.kt)("p",null,"This will generate a CSV file in the ",(0,i.kt)("strong",{parentName:"p"},"Notebooks/DemoMultivariateTraining/training")," folder. The CSV file will be named ",(0,i.kt)("inlineCode",{parentName:"p"},"sensors.csv"),"."),(0,i.kt)("h2",{id:"train-an-anomaly-detection-multivariate-model"},"Train an Anomaly Detection multivariate model"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Navigate to the ",(0,i.kt)("strong",{parentName:"p"},"Notebooks")," folder.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Start the Jupyter Notebook server by running the following command:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"jupyter notebook\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Open the ",(0,i.kt)("strong",{parentName:"p"},"DemoMultivariateTraining/multivariate_train_from_timeseries_data.ipynb")," notebook.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Run all the cells in the notebook.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"You'll notice the ",(0,i.kt)("strong",{parentName:"p"},"Train a model")," cell will take a while to run. This is because it's training the model using the data that you generated in the previous step. The training process will take a few minutes to complete. When the training process is complete. The output for this cell will be similar to the following:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-text"},"// highlight-start\nmodel id: 9990b402-8041-11ed-b12c-f2dc2fbc265b\n// highlight-end\nmodel status: CREATED\nmodel status: RUNNING\nmodel status: READY\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Make a note of the model id as you must update the ",(0,i.kt)("strong",{parentName:"p"},"Notebooks/.env")," file with this model id."))),(0,i.kt)("h2",{id:"detect-anomalies-using-the-multivariate-model"},"Detect anomalies using the multivariate model"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Navigate to the ",(0,i.kt)("inlineCode",{parentName:"p"},"Notebooks")," folder.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Start the Jupyter Notebook server by running the following command:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"jupyter notebook\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"A browser window will open and display the Jupyter Notebook dashboard. Click on the ",(0,i.kt)("inlineCode",{parentName:"p"},"multivariate_sql_inference_plot.ipynb")," notebook to open it.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Run the notebook cells one at a time. The notebook will walk you through the process of loading the data, training the model, and detecting anomalies."))),(0,i.kt)("p",null,"The notebook will show a plot of the predicted anomalies. The plot will show the predicted anomalies as red dots. The red circles are the actual anomalies that were generated by the HVAC simulator app. The red dots are the predicted anomalies generated by the anomaly detection model."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"The image shows the output from the anomaly detection api",src:a(4393).Z,width:"983",height:"525"})))}p.isMDXComponent=!0},4393:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/multivariate_plot-fa52db85a633a9266eafa15d067889e1.png"}}]);